{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["bf0_new", 1, false],
        ["bf1_new", 1, false],
        ["bf2_new", 1, false],
        ["bf3_new", 1, false],
        ["bf0_old", 1, false],
        ["bf1_old", 1, false],
        ["bf2_old", 1, false],
        ["bf3_old", 1, false],
        ["bf0_idx", 32, false],
        ["bf1_idx", 32, false],
        ["bf2_idx", 32, false],
        ["bf3_idx", 32, false],
        ["active_flow", 32, false],
        ["scan_pointer", 32, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["clone_spec", 32, false],
        ["instance_type", 32, false],
        ["drop", 1, false],
        ["recirculate_port", 16, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["lf_field_list", 32, false],
        ["mcast_grp", 16, false],
        ["resubmit_flag", 32, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["recirculate_flag", 32, false],
        ["parser_error", 32, false],
        ["_padding", 5, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 4,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 4, false],
        ["flags", 8, false],
        ["windows", 16, false],
        ["checksum", 16, false],
        ["urgenPtr", 16, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 5,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["length_", 16, false],
        ["checksum", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 4,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 5,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_udp",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_tcp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 369,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "ipv4", "udp", "tcp"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.bloom_filter_seg0_new",
      "id" : 0,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 176,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg0_new"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_seg1_new",
      "id" : 1,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 177,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg1_new"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_seg2_new",
      "id" : 2,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 178,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg2_new"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_seg3_new",
      "id" : 3,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 179,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg3_new"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_seg0_old",
      "id" : 4,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 180,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg0_old"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_seg1_old",
      "id" : 5,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 181,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg1_old"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_seg2_old",
      "id" : 6,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 182,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg2_old"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_seg3_old",
      "id" : 7,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 183,
        "column" : 28,
        "source_fragment" : "bloom_filter_seg3_old"
      },
      "size" : 65536,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.num_active_flow",
      "id" : 8,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 185,
        "column" : 26,
        "source_fragment" : "num_active_flow"
      },
      "size" : 10,
      "bitwidth" : 32
    },
    {
      "name" : "MyIngress.scan_pointer_reg",
      "id" : 9,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 186,
        "column" : 25,
        "source_fragment" : "scan_pointer_reg"
      },
      "size" : 1,
      "bitwidth" : 32
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "algo" : "identity",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "act",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "active_flow"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "active_flow"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 293,
            "column" : 8,
            "source_fragment" : "active_flow = active_flow + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.num_active_flow"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["scalars", "active_flow"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 294,
            "column" : 8,
            "source_fragment" : "num_active_flow.write(0, active_flow)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg0_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf0_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 297,
            "column" : 8,
            "source_fragment" : "bloom_filter_seg0_new.write(bf0_idx, 1)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg1_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf1_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 298,
            "column" : 8,
            "source_fragment" : "bloom_filter_seg1_new.write(bf1_idx, 1)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg2_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf2_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 299,
            "column" : 8,
            "source_fragment" : "bloom_filter_seg2_new.write(bf2_idx, 1)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg3_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf3_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 300,
            "column" : 8,
            "source_fragment" : "bloom_filter_seg3_new.write(bf3_idx, 1)"
          }
        }
      ]
    },
    {
      "name" : "act_0",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf0_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x0003"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 256,
            "column" : 4,
            "source_fragment" : "hash(bf0_idx, HashAlgorithm.crc32, 16w0, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf0_new"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg0_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf0_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 259,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg0_new.read(bf0_new, (bit<32>)bf0_idx)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf0_old"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg0_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf0_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 260,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg0_old.read(bf0_old, (bit<32>)bf0_idx)"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf1_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x0003"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 262,
            "column" : 4,
            "source_fragment" : "hash(bf1_idx, HashAlgorithm.crc16, 16w0, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf1_new"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg1_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf1_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 265,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg1_new.read(bf1_new, (bit<32>)bf1_idx)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf1_old"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg1_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf1_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 266,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg1_old.read(bf1_old, (bit<32>)bf1_idx)"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf2_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x0003"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 268,
            "column" : 4,
            "source_fragment" : "hash(bf2_idx, HashAlgorithm.csum16, 16w0, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf2_new"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg2_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf2_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 271,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg2_new.read(bf2_new, (bit<32>)bf2_idx)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf2_old"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg2_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf2_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 272,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg2_old.read(bf2_old, (bit<32>)bf2_idx)"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf3_idx"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_2"
            },
            {
              "type" : "hexstr",
              "value" : "0x0003"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 274,
            "column" : 4,
            "source_fragment" : "hash(bf3_idx, HashAlgorithm.identity, 16w0, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf3_new"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg3_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf3_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 277,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg3_new.read(bf3_new, (bit<32>)bf3_idx)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "bf3_old"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg3_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf3_idx"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 278,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg3_old.read(bf3_old, (bit<32>)bf3_idx)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "active_flow"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.num_active_flow"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 287,
            "column" : 4,
            "source_fragment" : "num_active_flow.read(active_flow, 0)"
          }
        }
      ]
    },
    {
      "name" : "act_1",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 321,
            "column" : 8,
            "source_fragment" : "scan_pointer = 0"
          }
        }
      ]
    },
    {
      "name" : "act_2",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "scan_pointer"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 324,
            "column" : 8,
            "source_fragment" : "scan_pointer = scan_pointer + 1"
          }
        }
      ]
    },
    {
      "name" : "act_3",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.scan_pointer_reg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 305,
            "column" : 4,
            "source_fragment" : "scan_pointer_reg.read(scan_pointer, 0)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg0_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf0_new"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 308,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg0_old.write(scan_pointer, bf0_new)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg1_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf1_new"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 309,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg1_old.write(scan_pointer, bf1_new)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg2_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf2_new"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 310,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg2_old.write(scan_pointer, bf2_new)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg3_old"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "bf3_new"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 311,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg3_old.write(scan_pointer, bf3_new)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg0_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 314,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg0_new.write(scan_pointer, 0)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg1_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 315,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg1_new.write(scan_pointer, 0)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg2_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 316,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg2_new.write(scan_pointer, 0)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_seg3_new"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 317,
            "column" : 4,
            "source_fragment" : "bloom_filter_seg3_new.write(scan_pointer, 0)"
          }
        }
      ]
    },
    {
      "name" : "act_4",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.scan_pointer_reg"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["scalars", "scan_pointer"]
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 326,
            "column" : 4,
            "source_fragment" : "scan_pointer_reg.write(0, scan_pointer)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "active_flow"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 328,
            "column" : 4,
            "source_fragment" : "standard_metadata.egress_spec = (bit<9>)active_flow"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 164,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "tbl_act",
      "tables" : [
        {
          "name" : "tbl_act",
          "id" : 0,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [1],
          "actions" : ["act_0"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "act_0" : "node_3"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_0",
          "id" : 1,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [0],
          "actions" : ["act"],
          "base_default_next" : "tbl_act_1",
          "next_tables" : {
            "act" : "tbl_act_1"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_1",
          "id" : 2,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["act_3"],
          "base_default_next" : "node_6",
          "next_tables" : {
            "act_3" : "node_6"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_2",
          "id" : 3,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2],
          "actions" : ["act_1"],
          "base_default_next" : "tbl_act_4",
          "next_tables" : {
            "act_1" : "tbl_act_4"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_3",
          "id" : 4,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3],
          "actions" : ["act_2"],
          "base_default_next" : "tbl_act_4",
          "next_tables" : {
            "act_2" : "tbl_act_4"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_4",
          "id" : 5,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["act_4"],
          "base_default_next" : null,
          "next_tables" : {
            "act_4" : null
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 289,
            "column" : 8,
            "source_fragment" : "bf0 == 1 && bf1 == 1 && bf2 == 1 && bf3 == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "and",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "|",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "bf0_new"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "bf0_old"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "|",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "bf1_new"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "bf1_old"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x01"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "|",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "bf2_new"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "bf2_old"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "|",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "bf3_new"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "bf3_old"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "false_next" : "tbl_act_0",
          "true_next" : "tbl_act_1"
        },
        {
          "name" : "node_6",
          "id" : 1,
          "source_info" : {
            "filename" : "sliding_sketch.p4",
            "line" : 320,
            "column" : 8,
            "source_fragment" : "scan_pointer == 32w3"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "scan_pointer"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000003"
              }
            }
          },
          "true_next" : "tbl_act_2",
          "false_next" : "tbl_act_3"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "sliding_sketch.p4",
        "line" : 343,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.lf_field_list",
      ["standard_metadata", "lf_field_list"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.resubmit_flag",
      ["standard_metadata", "resubmit_flag"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.recirculate_flag",
      ["standard_metadata", "recirculate_flag"]
    ]
  ],
  "program" : "./sliding_sketch.p4i",
  "__meta__" : {
    "version" : [2, 18],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}